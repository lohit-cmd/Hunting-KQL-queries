let lookback = 1h;
let net_to_endpoint_window_minutes = 5;
let suspicious_large_bytes = 8192;
let suspicious_uri_tokens = pack_array("/webvpn/","/vpn/","/sslvpn/","webvpn");
let firewall_vendor_token = "Cisco";
// ----------SUSPICIOUS FIREWALL HTTP CALLS ----------
let SuspiciousASAHTTP_raw =
CommonSecurityLog
| where TimeGenerated >= ago(lookback)
| where DeviceVendor has firewall_vendor_token or DeviceProduct has "ASA" or DeviceProduct has "FTD"
| where RequestMethod in ("POST","PUT") or RequestMethod == "GET"
| extend _url = tostring(RequestURL)
| where (_url <> "")
      and (tolower(_url) has_any (suspicious_uri_tokens)
           or (isnotempty(ReceivedBytes) and todouble(ReceivedBytes) > suspicious_large_bytes)
           or strlen(_url) > 200)
| project NetEventTime = TimeGenerated,
          SrcIP = SourceIP, DstIP = DestinationIP,
          RequestMethod, RequestURL = _url, ReceivedBytes, SentBytes,
          DeviceVendor, DeviceProduct, DeviceName_fw = DeviceName;
// Normalize both SrcIP & DstIP into one column (IP)**
let SuspiciousASAHTTP =
SuspiciousASAHTTP_raw
| extend _ips = pack_array(SrcIP, DstIP)
| mv-expand IP = _ips
| where isnotempty(IP)
| extend IP = tostring(IP)   // ensure non-dynamic for joins/grouping
| project NetEventTime, IP, SrcIP, DstIP, RequestMethod, RequestURL, ReceivedBytes, SentBytes, DeviceVendor, DeviceProduct, DeviceName_fw;
// ---------- IP -> Device bridge using DeviceNetworkEvents ----------
let IPtoDevice_flat =
DeviceNetworkEvents
| where Timestamp >= ago(lookback)
| project NetTime = Timestamp, DeviceName, LocalIP, RemoteIP
| extend _allIPs = pack_array(LocalIP, RemoteIP)
| mv-expand IP = _allIPs
| where isnotempty(IP)
| extend IP = tostring(IP)
| summarize arg_max(NetTime, DeviceName) by IP;
// ----------  anomalies ----------
let EndpointAnomalies =
DeviceProcessEvents
| where Timestamp >= ago(lookback)
| where FileName in ("powershell.exe","pwsh.exe","cmd.exe","bash","sh")
| extend CmdLine = ProcessCommandLine, ParentProc = InitiatingProcessFileName, Host = DeviceName
| where CmdLine has_any ("-EncodedCommand","-enc","FromBase64String","IEX","Invoke-Expression","base64")
   or (ParentProc has_any ("sshd","vpn","vpnweb","webvpn","asa_mgmt","management","svc","service"))
| project ProcTime = Timestamp, Host, FileName, CmdLine, ParentProc, ProcessId, InitiatingProcessId;
// ----------  JOIN  ----------
let NetToDevice =
SuspiciousASAHTTP
| join kind=inner (IPtoDevice_flat) on IP
| project NetEventTime, IP, SrcIP, DstIP, RequestMethod, RequestURL, ReceivedBytes,
          DeviceNameDetected = DeviceName, NetTime,
                    DeviceVendor, DeviceProduct;
// ---------- CORRELATE FOR ENDPOINT ANOMALIES ----------
NetToDevice
| join kind=inner (
    EndpointAnomalies
    | extend EndpointTime = ProcTime
) on $left.DeviceNameDetected == $right.Host
| where abs(datetime_diff('minute', NetEventTime, EndpointTime)) <= net_to_endpoint_window_minutes
| summarize
    FirstNetEvent = min(NetEventTime),
    FirstEndpointAnom = min(EndpointTime),
    ASA_Devices = make_set(DeviceNameDetected),
    Hosts = make_set(Host),
    Urls = make_set(RequestURL),
    CmdLines = make_set(CmdLine),
    CountMatches = count()
    by SrcIP, DstIP, DeviceVendor, DeviceProduct
| where CountMatches >= 1
| extend Severity = "High", Note = "Suspicious ASA/webvpn request correlated with encoded/obfuscated shell on device"
| project FirstNetEvent, FirstEndpointAnom, DeviceVendor, DeviceProduct, SrcIP, DstIP, ASA_Devices, Hosts, Urls, CmdLines, CountMatches, Severity, Note

